name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest    
    env:
      BASE: ~/OpenFOAM/OpenFOAM-8/
      BASE_: ~/OpenFOAM/OpenFOAM-8/
      FOAM_SRC: ~/OpenFOAM/OpenFOAM-8/src
      FOAM_USER_LIBBIN: ~/OpenFOAM/OpenFOAM-8/platforms
    
    steps:
    - name: Setup OpenFOAM Directory
      # Create OpenFOAM directory and clone
      run: mkdir -p ~/OpenFOAM
      
    - name: Clone OpenFOAM 
      # Clone OpenFOAM
      run: git clone  --depth 1 https://github.com/OpenFOAM/OpenFOAM-8.git  $BASE
      
    - name: Make of bashrc executable
      # Clone OpenFOAM
      run: chmod +x ./$BASE/etc/bashrc
      
    - name: dot source bash_rc 
      # Clone OpenFOAM
      run: . ./$BASE/etc/bashrc
  
    - name: get results of dot source
      # Clone OpenFOAM
      run: echo $WM_PROJECT
      

    - name: Show OpenFOAM folder
      run: ls $BASE
    - name: Show OpenFOAM folder
      run: ls $BASE_
      
    - name: Show OpenFOAM folder
      run: echo $FOAM_SRC
      
    - name: Show OpenFOAM folder
      run: ls $FOAM_SRC
      
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON 

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

name: Integration Tests
on: 
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      version:
        required: true
        type: string
      cyclic_case:
        required: true
        type: string
run-name: Integration test on ${{github.ref_name}}

env:
  BUILD_TYPE: Release
  FOAM_INST_DIR: /root/OpenFOAM
  WM_PROJECT: OpenFOAM
  WM_OPTIONS: linux64GccDPInt32Opt
  WM_COMPILER_TYPE: system
  WM_COMPILER: Gcc
  WM_PRECISION_OPTION: DP
  WM_LABEL_SIZE: 32
  WM_COMPILE_OPTION: Opt
  WM_OSTYPE: POSIX
  WM_ARCH: linux64
  WM_ARCH_OPTION: 64
  WM_LINK_LANGUAGE: c++
  WM_LABEL_OPTION:  Int32
  WM_MPLIB: SYSTEMOPENMPI
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  MPI_BUFFER_SIZE: 20000000 

jobs:
  setup_integration_matrix:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}
      steps:
      - id: set-matrix
        run: |
          echo "::set-output name=matrix::[\"cavity\", \"channel\"]"

  setup:
    runs-on: ubuntu-latest
    container: greole/ofbase
    strategy:
      fail-fast: false
      matrix: 
        - Case: ${{fromJson(needs.setup_integration_matrix.outputs.matrix)}}

    steps:
    - uses: actions/checkout@v4

    - name: Get Ginkgo checkout version
      shell: bash
      run: |
        grep -A1 "set(GINKGO_CHECKOUT_VERSION" CMakeLists.txt|tail -n1|grep -o  "[0-9a-z]*" > GINKGO_CHECKOUT_VERSION
        export GINKGO_CHECKOUT_VERSION=$(cat GINKGO_CHECKOUT_VERSION)
        echo "GINKGO_CHECKOUT_VERSION=$GINKGO_CHECKOUT_VERSION" >> $GITHUB_ENV

    - name: Source OF enviroment
      run: |
        mkdir -p $FOAM_INST_DIR
        echo "FOAM_ETC=$FOAM_INST_DIR/${{inputs.path}}/etc" >> $GITHUB_ENV
        echo "WM_PROJECT_DIR=$FOAM_INST_DIR/${{inputs.path}}" >> $GITHUB_ENV
        echo "FOAM_USER_PATH=$FOAM_INST_DIR/root-${{inputs.version}}" >> $GITHUB_ENV
        echo "FOAM_TUTORIALS=$FOAM_INST_DIR/${{inputs.path}}/tutorials" >> $GITHUB_ENV
        echo "FOAM_USER_LIBBIN=$FOAM_INST_DIR/root-${{inputs.version}}/platforms/linux64GccDPInt32Opt/lib" >> $GITHUB_ENV
        echo "FOAM_SRC=$FOAM_INST_DIR/${{inputs.path}}/src" >> $GITHUB_ENV
        echo "Ginkgo_DIR=${{env.FOAM_INST_DIR}}/root-${{inputs.version}}/platforms/linux64GccDPInt32Opt/lib/cmake/Ginkgo" >> $GITHUB_ENV
        echo "GINKGO_EXECUTOR=reference" >> $GITHUB_ENV
        echo "CYCLIC_CASE=${{inputs.cyclic_case}}" >> $GITHUB_ENV
        echo "OMPI_MCA_btl_vader_single_copy_mechanism=none" >> $GITHUB_ENV

    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ inputs.path }}-${{env.GINKGO_CHECKOUT_VERSION}}
        path: /home/runner/work/_temp/_github_home

    - name: Cache Workspace
      uses: actions/cache@v3
      with:
        key: ws-${{ hashFiles(/__w/OGL/OGL/test/${{matrix.Case}}.yaml) }}
        path: /home/runner/work/_temp/_github_home/${{matrix.Case}}

    - name: Generate test cases
      working-directory: /github/home/
      shell: bash
      run: |
        export PATH=$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/bin:$PATH
        export LD_LIBRARY_PATH=$FOAM_USER_LIBBIN:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib/sys-openmpi/:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib/openmpi-system:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib/dummy/:$LD_LIBRARY_PATH
        export OBR_RUN_CMD="mpirun --bind-to core --map-by core -np {np} {solver} -parallel -case {path}/case > {path}/case/{solver}_{timestamp}.log 2>&1"

        mkdir ${{matrix.Case}} && cd ${{matrix.Case}}
        obr init --config /__w/OGL/OGL/test/${{matrix.Case}}.yaml
        obr run -o generate

  run:
    runs-on: ubuntu-latest
    container: greole/ofbase
    needs: setup
    strategy:
      fail-fast: false
      matrix: 
        - Case: ${{fromJson(needs.setup_integration_matrix.outputs.matrix)}}

    steps:
    - uses: actions/checkout@v4

    - name: Get Ginkgo checkout version
      shell: bash
      run: |
        grep -A1 "set(GINKGO_CHECKOUT_VERSION" CMakeLists.txt|tail -n1|grep -o  "[0-9a-z]*" > GINKGO_CHECKOUT_VERSION
        export GINKGO_CHECKOUT_VERSION=$(cat GINKGO_CHECKOUT_VERSION)
        echo "GINKGO_CHECKOUT_VERSION=$GINKGO_CHECKOUT_VERSION" >> $GITHUB_ENV

    - name: Source OF enviroment
      run: |
        mkdir -p $FOAM_INST_DIR
        echo "FOAM_ETC=$FOAM_INST_DIR/${{inputs.path}}/etc" >> $GITHUB_ENV
        echo "WM_PROJECT_DIR=$FOAM_INST_DIR/${{inputs.path}}" >> $GITHUB_ENV
        echo "FOAM_USER_PATH=$FOAM_INST_DIR/root-${{inputs.version}}" >> $GITHUB_ENV
        echo "FOAM_TUTORIALS=$FOAM_INST_DIR/${{inputs.path}}/tutorials" >> $GITHUB_ENV
        echo "FOAM_USER_LIBBIN=$FOAM_INST_DIR/root-${{inputs.version}}/platforms/linux64GccDPInt32Opt/lib" >> $GITHUB_ENV
        echo "FOAM_SRC=$FOAM_INST_DIR/${{inputs.path}}/src" >> $GITHUB_ENV
        echo "Ginkgo_DIR=${{env.FOAM_INST_DIR}}/root-${{inputs.version}}/platforms/linux64GccDPInt32Opt/lib/cmake/Ginkgo" >> $GITHUB_ENV
        echo "GINKGO_EXECUTOR=reference" >> $GITHUB_ENV
        echo "CYCLIC_CASE=${{inputs.cyclic_case}}" >> $GITHUB_ENV
        echo "OMPI_MCA_btl_vader_single_copy_mechanism=none" >> $GITHUB_ENV

    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ inputs.path }}-${{env.GINKGO_CHECKOUT_VERSION}}
        path: /home/runner/work/_temp/_github_home

    - name: Cache Workspace
      uses: actions/cache@v3
      with:
        key: ws-${{ hashFiles(/__w/OGL/OGL/test/${{matrix.Case}}.yaml) }}
        path: /home/runner/work/_temp/_github_home/${{matrix.Case}}

    - name: Copy OGL from cached folder
      run: |
        mkdir -p $FOAM_USER_LIBBIN
        ls -la /github/home
        cp -r /github/home/libbin/* $FOAM_USER_LIBBIN

    - name: Execute test cases
      working-directory: /github/home/${{matrix.Case}}
      shell: bash
      run: |
        export PATH=$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/bin:$PATH
        export LD_LIBRARY_PATH=$FOAM_USER_LIBBIN:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib/sys-openmpi/:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib/openmpi-system:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib/dummy/:$LD_LIBRARY_PATH
        export OBR_RUN_CMD="mpirun --bind-to core --map-by core -np {np} {solver} -parallel -case {path}/case >  {path}/case/{solver}_{timestamp}.log 2>&1"
        obr run -o runParallelSolver

    - name: Update workspace cache
      run: |
        STATE_CACHE_KEY="ws"
        echo "STATE_CACHE_KEY=${STATE_CACHE_KEY}" >> $GITHUB_ENV 

  validate:
    runs-on: ubuntu-latest
    container: greole/ofbase
    needs: run
    strategy:
      fail-fast: false
      matrix: 
        - Case: ${{fromJson(needs.setup_integration_matrix.outputs.matrix)}}

    steps:
    - uses: actions/checkout@v4

    - name: Cache Workspace
      uses: actions/cache@v3
      with:
        key: ws-${{ hashFiles(/__w/OGL/OGL/test/${{matrix.Case}}.yaml) }}
        path: /home/runner/work/_temp/_github_home/${{matrix.Case}}

    - name: Get Ginkgo checkout version
      shell: bash
      run: |
        grep -A1 "set(GINKGO_CHECKOUT_VERSION" CMakeLists.txt|tail -n1|grep -o  "[0-9a-z]*" > GINKGO_CHECKOUT_VERSION
        export GINKGO_CHECKOUT_VERSION=$(cat GINKGO_CHECKOUT_VERSION)
        echo "GINKGO_CHECKOUT_VERSION=$GINKGO_CHECKOUT_VERSION" >> $GITHUB_ENV

    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ inputs.path }}-${{env.GINKGO_CHECKOUT_VERSION}}
        path: /home/runner/work/_temp/_github_home

    - name: Get status
      working-directory: /github/home/${{matrix.Case}}
      run: |
        obr status
        obr query -q global -q continuityErrors -q CourantNumber --export-to=${{matrix.Case}}_output.json

    - name: Validate state
      working-directory: /github/home/${{matrix.Case}}
      run: |
        obr query -q global -q continuityErrors -q CourantNumber --validate-against=/__w/OGL/OGL/test/${{matrix.Case}}_validation.json

    - name: Rename log files
      if: always()
      working-directory: /github/home/
      run: |
        find . -name "*:*" -exec rename 's|:|-|g' {} \;

    - name: Archive integration artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: ogl_integration_${{ inputs.path }}
        path: /github/home

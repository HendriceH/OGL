name: Build OpenFOAM (ESI)
on: 
  pull_request:
    types: opened,ready_for_review
  schedule:
    -cron: "* * * * 0"
env:
  BUILD_TYPE: Release
  FOAM_INST_DIR: /home/runner/OpenFOAM/
  WM_PROJECT: OpenFOAM
  WM_OPTIONS: linux64gccDPInt32Opt
  WM_COMPILER_TYPE: system
  WM_COMPILER: Gcc
  WM_PRECISION_OPTION: DP
  WM_LABEL_SIZE: 32
  WM_COMPILE_OPTION: Opt
  WM_OSTYPE: POSIX
  WM_ARCH: linux64
  WM_ARCH_OPTION: 64
  WM_LINK_LANGUAGE: c++
  WM_LABEL_OPTION:  Int32
  
jobs:
  build-foam:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        OF: [
             {repo: "https://develop.openfoam.com/Development/openfoam.git",
              path: "openfoam",
              version: "v2212",
              mpi: "SYSTEMOPENMPI"}]
  
    steps:
    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ matrix.OF.path }}
        path: /home/runner/OpenFOAM/
          
    - name: Writing an OF enviroment file
      run: |
        echo "FOAM_ENV_FILE=$FOAM_INST_DIR/env_file" >> $GITHUB_ENV
        echo "PLATFORM=$FOAM_INST_DIR/${{matrix.OF.path}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV
        echo "UPLATFORM=$FOAM_INST_DIR/${{github.actor}}-${{matrix.OF.version}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV
        echo "WM_PROJECT_VERSION=${{ matrix.OF.version }}" > $FOAM_ENV_FILE
        echo "WM_DIR=${{env.FOAM_INST_DIR}}/${{ matrix.OF.path }}/wmake" >> $FOAM_ENV_FILE
        echo "WM_MPLIB=${{matrix.OF.mpi}}" >> $FOAM_ENV_FILE
        echo "WM_PROJECT_INST_DIR=${{env.FOAM_INST_DIR}}" >> $FOAM_ENV_FILE
        echo "WM_THIRD_PARTY_DIR=${{env.FOAM_INST_DIR}}/ThirdParty-${{matrix.OF.version}}" >> $FOAM_ENV_FILE
        echo "FOAM_ETC=$FOAM_INST_DIR/${{matrix.OF.path}}/etc" >> $FOAM_ENV_FILE
        echo "FOAM_SRC=$FOAM_INST_DIR/${{matrix.OF.path}}/src" >> $FOAM_ENV_FILE
        echo "FOAM_APP=$FOAM_INST_DIR/${{matrix.OF.path}}/applications" >> $FOAM_ENV_FILE
        echo "FOAM_TUTORIALS=$FOAM_INST_DIR/${{matrix.OF.path}}/tutorials" >> $FOAM_ENV_FILE
        echo "FOAM_UTILITIES=$FOAM_INST_DIR/${{matrix.OF.path}}/applications/utilities" >> $FOAM_ENV_FILE
        echo "FOAM_SOLVERS=$FOAM_INST_DIR/${{matrix.OF.path}}/applications/solvers" >> $FOAM_ENV_FILE
        echo "WM_PROJECT_DIR=$FOAM_INST_DIR/${{matrix.OF.path}}" >> $FOAM_ENV_FILE
        echo "FOAM_LIBBIN=$PLATFORM/lib" >> $FOAM_ENV_FILE
        echo "FOAM_APPBIN=$PLATFORM/bin" >> $FOAM_ENV_FILE
        echo "FOAM_EXT_LIBBIN=$FOAM_INST_DIR/ThirdParty/platforms/linux64GccDPInt32Opt/lib" >> $FOAM_ENV_FILE
        echo "FOAM_USER_PATH=${{env.FOAM_INST_DIR}}/${{github.actor}}-${{matrix.OF.version}}" >> $FOAM_ENV_FILE
        echo "FOAM_USER_LIBBIN=$UPLATFORM/lib" >> $FOAM_ENV_FILE
        echo "FOAM_USER_APPBIN=$UPLATFORM/bin" >> $FOAM_ENV_FILE
        echo "Ginkgo_DIR=$FOAM_USER_LIBBIN/cmake/Ginkgo" >> $FOAM_ENV_FILE
        echo "LD_LIBRARY_PATH=$FOAM_LIBBIN:$FOAM_LIBBIN/dummy" >> $FOAM_ENV_FILE
        cat $FOAM_INST_DIR/env_file >> $GITHUB_ENV

    
    - name: Install build depencies  
      # Clone OpenFOAM
      run: |
        sudo apt update
        sudo apt install \
          git \
          build-essential \
          autoconf \
          autotools-dev \
          flex bison cmake zlib1g-dev \
          libfl-dev \
          mpi-default-bin mpi-default-dev \
          libopenmpi-dev openmpi-bin gnuplot libreadline-dev libncurses-dev libxt-dev \
          libscotch-dev libcgal-dev python python-dev

    - name: Clone OpenFOAM 
      run: |
        if [ ! -d /home/runner/OpenFOAM/${{matrix.OF.path}} ]; then
          git clone  --depth 1 ${{ matrix.OF.repo }} \
            /home/runner/OpenFOAM/${{ matrix.OF.path }}
          chmod +x /home/runner/OpenFOAM/openfoam/etc/openfoam
        else
          chmod +x /home/runner/OpenFOAM/openfoam/etc/openfoam
          echo "Skipping clone"
        fi

    - name: Build OpenFOAM
      # Clone OpenFOAM
      working-directory: /home/runner/OpenFOAM/${{ matrix.OF.path }}
      run: /home/runner/OpenFOAM/openfoam/etc/openfoam ./Allwmake -j
      
    - name: Show OpenFOAM folder
      # Clone OpenFOAM
      run: ls /home/runner/OpenFOAM/${{ matrix.OF.path }}
      
    - uses: actions/checkout@v2
    - name: Install ninja-build tool
      # You may pin to the exact commit or the version.
      # uses: seanmiddleditch/gha-setup-ninja@16b940825621068d98711680b6c3ff92201f8fc0
      uses: seanmiddleditch/gha-setup-ninja@v3
      with:
        # Version of ninja-build to install
        version: 1.10.0 # default is 1.10.0
    
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      working-directory: ${{github.workspace}}
      run: |
        mkdir build 
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

  build-ogl:
    needs: build-foam
    runs-on: ubuntu-latest
    steps:
    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ matrix.OF.path }}
        path: /home/runner/OpenFOAM/

    - name: Source OF enviroment
      run: |
        echo "FOAM_ENV_FILE=$FOAM_INST_DIR/env_file"
        echo "PLATFORM=$FOAM_INST_DIR/${{matrix.OF.path}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV
        echo "UPLATFORM=$FOAM_INST_DIR/${{github.actor}}-${{matrix.OF.version}}/platforms/linux64GccDPInt32Opt" >> $GITHUB_ENV
        cat $FOAM_INST_DIR/env_file >> $GITHUB_ENV

    - name: Build OGL
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config $BUILD_TYPE

    - name: Test OGL
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE

    - name: Install OGL
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --install ./build


  run-integration_tests:
    needs: build-foam, build-ogl
    runs-on: ubuntu-latest
    steps:
    - name: Cache OpenFOAM
      uses: actions/cache@v3
      with:
        key: ${{ matrix.OF.path }}
        path: /home/runner/OpenFOAM/

